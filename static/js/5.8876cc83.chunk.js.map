{"version":3,"sources":["components/Content/Dialogs/dialogs.module.css","components/Content/Dialogs/MessageItem/messageItem.module.css","components/Content/Dialogs/MessageItem/messageItem.js","components/Content/Dialogs/DialogItem/dialogItem.js","components/Content/Dialogs/dialogs.js","components/Content/Dialogs/dialogsContainer.js","HOC/withAuthRedirectComponent.js"],"names":["module","exports","MessageItem","props","className","MessagesCSS","MessageItemCSS","Message","message","Avatar","alt","src","avatar","DialogItem","Active","to","id","name","maxLength","maxLengthCreator","ReduxDialogsForm","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","requiredField","Dialogs","messageHTML","messageData","map","dialogsHTML","dialogsData","dialog","DialogItems","MessageItems","formData","console","log","messageText","SendMessageText","reset","compose","connect","state","dialogsPage","newPostText","dispatch","addMessageActionCreator","Component","RedirectComponent","this","isAuth","React","auth"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,WAAa,4BAA4B,OAAS,wBAAwB,aAAe,8BAA8B,YAAc,+B,oBCArOD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,QAAU,6BAA6B,OAAS,8B,gHCgBlGC,EAbK,SAACC,GACjB,OACI,sBAAKC,UAAWC,IAAYH,YAA5B,UACI,qBAAKE,UAAWE,IAAeC,QAA/B,SACKJ,EAAMK,UAEX,qBAAKJ,UAAWE,IAAeG,OAA/B,SACI,qBAAKC,IAAI,SAASC,IAAKR,EAAMS,e,QCE9BC,EARI,SAACV,GAChB,OACI,qBAAKC,UAAWC,IAAYQ,WAAa,IAAMR,IAAYS,OAA3D,SACI,cAAC,IAAD,CAASC,GAAI,aAAeZ,EAAMa,GAAlC,SAAuCb,EAAMc,U,yCCArDC,EAAYC,YAAiB,IAoB3BC,EAAmBC,YAAU,CAC/BC,KAAM,YADeD,EAlBL,SAAClB,GAEjB,OACI,uBAAMoB,SAAUpB,EAAMqB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,YAAa,UACbX,KAAM,UACNY,SAAU,CAACC,IAAeZ,OAGrC,8BACI,sDA4DDa,EAlDC,SAAC5B,GAEb,IAOI6B,EACA7B,EAAM8B,YAAYC,KAAI,SAAA1B,GACd,OAAQ,cAAC,EAAD,CAAaA,QAASA,EAAQA,QAASI,OAAQJ,EAAQI,YAIvEuB,EACAhC,EAAMiC,YAAYF,KAAI,SAAAG,GAAM,OACxB,cAAC,EAAD,CAAYrB,GAAIqB,EAAOrB,GAAIC,KAAMoB,EAAOpB,UAchD,OACI,8BACI,sBAAKb,UAAWC,IAAY0B,QAA5B,UACI,sBAAK3B,UAAWC,IAAYiC,YAA5B,mBAEKH,KAEL,sBAAK/B,UAAWC,IAAYkC,aAA5B,sBAEKP,KAEL,8BACI,cAACZ,EAAD,CAAkBG,SAzCR,SAACiB,GACvBC,QAAQC,IAAIF,GACZ,IAAIG,EAAcH,EAAShC,QAC3BL,EAAMyC,gBAAgBD,GACtBE,YAAM,sB,sDCRCC,sBACXC,aAvBmB,SAACC,GACpB,MAAO,CACHf,YAAae,EAAMC,YAAYhB,YAC/BG,YAAaY,EAAMC,YAAYb,YAC/Bc,YAAaF,EAAMC,YAAYC,gBAMd,SAACC,GACtB,MAAO,CAKHP,gBAAiB,SAACD,GACdQ,EAASC,YAAwBT,UCrBb,SAACU,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAA0B,IAAtBC,KAAKpD,MAAMqD,OAGP,aADJ,CACI,+GAED,cAACH,EAAD,eAAeE,KAAKpD,YARQ,GACXsD,IAAMJ,WAetC,OAAON,aAJe,SAACC,GAAD,MAAY,CAC9BQ,OAAQR,EAAMU,KAAKF,UAInB,GADGT,CAELO,KDQSR,CAIdf","file":"static/js/5.8876cc83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"dialogs_Dialogs__3QgKa\",\"DialogItems\":\"dialogs_DialogItems__3HlaV\",\"DialogItem\":\"dialogs_DialogItem__2bMrY\",\"Active\":\"dialogs_Active__2IfiG\",\"MessageItems\":\"dialogs_MessageItems__1HW3O\",\"MessageItem\":\"dialogs_MessageItem__3eIpA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessageItem\":\"messageItem_MessageItem__2XlLg\",\"Message\":\"messageItem_Message__1iU04\",\"Avatar\":\"messageItem_Avatar__1eBOp\"};","import React from \"react\";\r\nimport MessageItemCSS from './messageItem.module.css';\r\nimport MessagesCSS from \"../dialogs.module.css\";\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className={MessagesCSS.MessageItem}>\r\n            <div className={MessageItemCSS.Message}>\r\n                {props.message}\r\n            </div>\r\n            <div className={MessageItemCSS.Avatar}>\r\n                <img alt='Avatar' src={props.avatar}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\n// import DialogItemsCSS from \"./dialogItem.module.css\";\r\nimport MessagesCSS from \"../dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={MessagesCSS.DialogItem + ' ' + MessagesCSS.Active}>\r\n            <NavLink to={\"/messages/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport MessagesCSS from './dialogs.module.css';\r\nimport MessageItem from \"./MessageItem/messageItem\";\r\nimport DialogItem from \"./DialogItem/dialogItem\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {TextArea} from \"../../Common/FormControls/FormControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\n\r\nlet maxLength = maxLengthCreator(30);\r\n\r\nconst DialogsForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea}\r\n                       placeholder={\"Message\"}\r\n                       name={\"message\"}\r\n                       validate={[requiredField, maxLength]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxDialogsForm = reduxForm({\r\n    form: 'messages'\r\n})(DialogsForm)\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    const onSendButtonClick = (formData) => {\r\n        console.log(formData);\r\n        let messageText = formData.message;\r\n        props.SendMessageText(messageText);\r\n        reset(\"message\");\r\n    }\r\n\r\n    let messageHTML =\r\n        props.messageData.map(message => {\r\n                return (<MessageItem message={message.message} avatar={message.avatar}/>);\r\n            }\r\n        );\r\n\r\n    let dialogsHTML =\r\n        props.dialogsData.map(dialog => (\r\n            <DialogItem id={dialog.id} name={dialog.name}/>\r\n        ));\r\n\r\n    // let NewMessageText = React.createRef();\r\n    //\r\n    // let onMessageChange = () => {\r\n    //     let Text = NewMessageText.current.value;\r\n    //     props.onMessageChange(Text);\r\n    // }\r\n    //\r\n    // let SendMessageText = () => {\r\n    //     props.SendMessageText();\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <div className={MessagesCSS.Dialogs}>\r\n                <div className={MessagesCSS.DialogItems}>\r\n                    Names:\r\n                    {dialogsHTML}\r\n                </div>\r\n                <div className={MessagesCSS.MessageItems}>\r\n                    Messages:\r\n                    {messageHTML}\r\n                </div>\r\n                <div>\r\n                    <ReduxDialogsForm onSubmit={onSendButtonClick}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","// import React from \"react\";\r\nimport {addMessageActionCreator} from \"../../../Redux/dialogsReducer\";\r\nimport Dialogs from \"./dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../HOC/withAuthRedirectComponent\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStatesToProps = (state) => {\r\n    return {\r\n        messageData: state.dialogsPage.messageData,\r\n        dialogsData: state.dialogsPage.dialogsData,\r\n        newPostText: state.dialogsPage.newPostText,\r\n    }\r\n}\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // onMessageChange: (Text) => {\r\n        //     dispatch(onMessageChangeActionCreator(Text));\r\n        // },\r\n\r\n        SendMessageText: (messageText) => {\r\n            dispatch(addMessageActionCreator(messageText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose (\r\n    connect(mapStatesToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)\r\n(Dialogs)\r\n\r\n// const RRDialogsContainer = connect(mapStatesToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n//\r\n// export default RRDialogsContainer;\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (this.props.isAuth === false)\r\n                return (\r\n                // <Redirect to='/login'/>\r\n                    <div>Авторизируйтесь</div>\r\n                )\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    });\r\n\r\n    return connect(mapStateToProps,\r\n        {}\r\n    )(RedirectComponent);\r\n}\r\n"],"sourceRoot":""}